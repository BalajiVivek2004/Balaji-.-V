import tkinter as tk
from tkinter import ttk
from forex_python.converter import CurrencyRates

class CurrencyConverterApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Currency Converter")
        self.c = CurrencyRates()
        self.from_currency_var = tk.StringVar()
        self.to_currency_var = tk.StringVar()
        self.amount_var = tk.DoubleVar()
        self.exchange_rate_var = tk.StringVar()
        self.result_var = tk.StringVar()
        self.create_gui()
        
    def create_gui(self):
        tk.Label(self.root, text="Amount:").grid(row=0, column=0, padx=10, pady=10)
        amount_entry = tk.Entry(self.root, textvariable=self.amount_var)
        amount_entry.grid(row=0, column=1, padx=10, pady=10)
        tk.Label(self.root, text="From Currency:").grid(row=1, column=0, padx=10, pady=10)
        from_currency_combobox = ttk.Combobox(self.root, textvariable=self.from_currency_var)
        from_currency_combobox['values'] = list(self.c.get_rates("").keys())
        from_currency_combobox.grid(row=1, column=1, padx=10, pady=10)
        tk.Label(self.root, text="To Currency:").grid(row=2, column=0, padx=10, pady=10)
        to_currency_combobox = ttk.Combobox(self.root, textvariable=self.to_currency_var)
        to_currency_combobox['values'] = list(self.c.get_rates("").keys())
        to_currency_combobox.grid(row=2, column=1, padx=10, pady=10)
        tk.Label(self.root, text="Exchange Rate:").grid(row=3, column=0, padx=10, pady=10)
        exchange_rate_label = tk.Label(self.root, textvariable=self.exchange_rate_var)
        exchange_rate_label.grid(row=3, column=1, padx=10, pady=10)
        tk.Label(self.root, text="Result:").grid(row=4, column=0, padx=10, pady=10)
        result_label = tk.Label(self.root, textvariable=self.result_var)
        result_label.grid(row=4, column=1, padx=10, pady=10)
        convert_button = tk.Button(self.root, text="Convert", command=self.convert)
        convert_button.grid(row=5, column=0, columnspan=2, pady=10)

    def convert(self):
        try:
            amount = self.amount_var.get()
            from_currency = self.from_currency_var.get()
            to_currency = self.to_currency_var.get()

            exchange_rate = self.c.get_rate(from_currency, to_currency)
            result = round(amount * exchange_rate, 2)

            self.exchange_rate_var.set(f"{exchange_rate:.4f}")
            self.result_var.set(f"{amount} {from_currency} = {result} {to_currency}")
        except Exception as e:
            self.result_var.set("Error: " + str(e))

if __name__ == "__main__":
    root = tk.Tk()
    app = CurrencyConverterApp(root)
    root.mainloop()
